[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this blog"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "AngelinaEvansBlog",
    "section": "",
    "text": "Week 1 Blog\n\n\n\n\n\n\n\nWeek One\n\n\n\n\n\n\n\n\n\n\n\nMay 23, 2023\n\n\nAngelina Evans\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nWeek 2 Blog\n\n\n\n\n\n\n\nWeek Two\n\n\n\n\n\n\n\n\n\n\n\nMay 23, 2023\n\n\nAngelina Evans\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/Week1Blog/AngelinaWeek1.html",
    "href": "posts/Week1Blog/AngelinaWeek1.html",
    "title": "Week 1 Blog",
    "section": "",
    "text": "My First Week with DSPG\nDuring week one, I took a couple data camp courses to get more familiar with topics in R, Github, and web scraping in R.\nHere is an example of what I did in the Intro to R course. In the code below, there are two vectors: scores and comments. The scores represent the ratings of different movies and comments are opinions of viewers.\n\nscores <- c(4.6, 5, 4.8, 5, 4.2)\ncomments <- c(\"I would watch it again\", \"Amazing!\", \"I liked it\", \"One of the best movies\", \"Fascinating plot\")\n\nI can get the mean of the scores vector by writing:\n\nmean(scores)\n\n[1] 4.72\n\n\nSomething that was very new to me in R was matrices. I learned how to create them and how to reference specific rows and columns.\n\n# Vector with numerics from 1 up to 10\nmy_vector <- 1:10 \n\n# Matrix with numerics from 1 up to 9\nmy_matrix <- matrix(1:9, ncol = 3)\n\n# First 10 elements of the built-in data frame mtcars\nmy_df <- mtcars[1:10,]\n\n# Construct list with these different elements:\nmy_list <- list(my_vector,my_matrix,my_df)\n\nI plan to complete these courses: Intermediate R, Web Scraping in R, and AI Fundamentals.\n\n\n\nHere are two courses I want to complete soon. I also plan to take the AI Fundamentals course."
  },
  {
    "objectID": "posts/Week2Blog/AngelinaWeek2.html",
    "href": "posts/Week2Blog/AngelinaWeek2.html",
    "title": "Week 2 Blog",
    "section": "",
    "text": "TidyVerse\nKyle Walker’s Tutorials introduces TidyCensus in R.\nHere is a bar graph showing median income for Story, Grundy, Chickasaw, and Buchanan counties. Also included is each estimate’s margin of error.\n\nlibrary(tidycensus)\nlibrary(ggplot2)\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.2     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ lubridate 1.9.2     ✔ tibble    3.2.1\n✔ purrr     1.0.1     ✔ tidyr     1.3.0\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n\nmedian_income <- get_acs(\n  geography = \"county\",\n  variables = \"B19013_001\",\n  year = 2021\n)\n\nGetting data from the 2017-2021 5-year ACS\n\nwinvest_counties <- get_acs(\n  geography = 'county',\n  state = 'IA',\n  county = c('Story', 'Grundy', 'Chickasaw', 'Buchanan'),\n  variables = \"B19013_001\",\n  year = 2021,\n  survey = 'acs5' \n)\n\nGetting data from the 2017-2021 5-year ACS\n\nggplot(winvest_counties, aes(y = estimate, x = NAME)) + \n  ggtitle(\"Median Income\")+\n  geom_bar(stat=\"identity\", color = \"#3182bd\", fill=\"#9ecae1\")+labs(x=\"county name\",y=\"dollars\")+\n  scale_x_discrete(labels = function(x) str_remove(x, \" County, Iowa|, Iowa\"))+\n  geom_errorbar(aes(ymin = estimate - moe, ymax = estimate + moe),\n              width = 0.5, linewidth = 0.5)"
  }
]