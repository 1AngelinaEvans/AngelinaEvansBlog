{
  "hash": "fe1a2bbcb2db159554722447b85e7b29",
  "result": {
    "markdown": "---\ntitle: \"Guide to Visualizing House Quality\"\nauthor: \"Angelina Evans\"\ndate: \"2023-06-29\"\ncategories: \"Mapping\"\ntoc: True\n---\n\n\n# Creating Geographic Visualizations of House Quality\n\n## Introduction\n\nIn this guide, I will be sharing the steps I took to create geographic visualizations in Tableau related to housing quality. To demonstrate the process, I will be using data from the city of Ogden, Iowa. Another AI Housing team member, Gavin, created a [guide on evaluating cities](https://gavinfishy.github.io/Gavin_DSPG_Blog/posts/Gavin-Fisher_guide_w7/full_guide.html) using Ogden as an example. In hopes that the data will appear familiar, I will be using the resulting data from his city evaluation guide.\n\n## Collecting Addresses from City\n\nSteps for address collection and dataset cleaning are shown in the [address collection and cleaning section](https://gavinfishy.github.io/Gavin_DSPG_Blog/posts/Gavin-Fisher_guide_w7/full_guide.html#address-collection-and-cleaning) of Gavin's guide. It is **very important** that you have these things available in the dataset:\n\n-   House number\n\n-   Street name\n\n-   City\n\n-   State\n\n-   Quality of house characteristics you wish to use in your geographic visualizations (ex. AI outputs for siding, vegetation, gutter).\n\n    If you followed the steps in the address collection and cleaning section of Gavin's guide, your dataset might have some columns that look like this:\n\n    ![](Ogden_Database.png)\n\nI suggest creating a new column that has combines contents from address, city, and state. I auto-populated the city column with the city name (Ogden) and the state column with the state name (Iowa). In a new column and new empty cell, I used the & to combine the contents of three columns. My function is:\n\n**=Cell&\",\"&Cell&\",\"Cell**\n\n=A2&\",\"&B2&\",\"&C2\n\nThen I auto-populated the rest of the cells to utilize the same function.\n\n![](ogden_database_w_address.png){fig-align=\"center\"}\n\n## Geocoding Addresses in R\n\nUsing the addresses provided from the dataset, I acquired coordinates that can be used to map the address locations. There are several ways to geocode addresses. If you are familiar with ArcGIS or QGIS, you can use that but I had major issues with QGIS geocoding. I used the MMQGIS plugin and had multiple problems. First, it continued to crash and second, I could never successfully geocode all the addresses I needed to. Many of my addresses were missing and other team members had the same issue when using MMQGIS. So I would advise against starting with QGIS, unless it has worked well for you in the past.\n\nYou can also use python or R. I geocoded addresses in RStudio. I followed the approach provided by [StoryBench](https://www.storybench.org/geocode-csv-addresses-r/). I made a few changes to the code from StoryBench. The code and steps are shown below.\n\n1.  Start by installing the ggmap package (no need to install ggplot2 unless you later want to plot addresses in R).\n\n2.  Load in the csv file (Ogden database).\n\n3.  Create data frames.\n\n4.  Register a Google API key. Put the key in the \"key goes here\" spot.\n\n5.  For loop: for each address, you receive a latitude and longitude. They should go in their respected columns (lat and long). Line 26 has the column name full_address. Change this to the name of the column that has your full addresses.\n\n6.  Write the contents of origAddress to a new file (in this case, ogden_geocoded2.csv). Save the new file.\n\n    ![](ogden_geocoding_script1.png)\n\n    ![](ogden_geocoding_script2.png)\n\nOnce you have geocoded the addresses, the latitude and longitude columns should be filled. Remove the NAs from the other columns.\n\n![](ogden_geocoded_addresses.png)\n\n## Mapping house quality ratings using Tableau\n\nThere are many different ways you can map these addresses. If you have access to ArcGIS pro, you can use that. I also like using QGIS, an open source software. In this guide I will be using Tableau because this is what I used for my final visualizations. We decided to use Tableau because we needed to create other visualizations (ex. graphs) with the data provided in the csv file.\n\n### 1. Register and download Tableau\n\nAs a student, you can register to get [Tableau Desktop free for one year.](https://www.tableau.com/academic/students) I was having installation issues, so I use [Tableau Public, which is free to anyone.](https://public.tableau.com/app/discover) You can use either for these visualizations, but my steps will be for Tableau Public. The desktop version is very similar so you should be able to follow along if using Tableau Desktop.\n\nIf you are using Tableau Public, be sure to save you work by publishing.\n\n### 2. Create a new workbook and upload new data\n\nOnce you click \"Create\", you should be prompted to upload data from your computer. Select the csv file you wish to use.\n\n### 3. Creating the map\n\nWatching [this video](https://www.youtube.com/watch?v=X0n0s0gzcvE) by TutorialsPoint helped me get started on mapping in Tableau.\n\nAfter uploaded the data, click the sheet tab on the bottom. I renamed my sheet to ogden_siding. From the \"Data\" tab on the left side of the screen, find Lon and Lat and drag both to columns and rows at the top of the screen. Right click on Lon and Lat and make sure that *Dimension* is checked, not attribute or measure. When this is done, you can click the \"Show Me\" button on the upper right part of the screen. Click on the map that is circled in the image. You should then be able to see addresses on a map. Click size to shrink or grow the points. To show a particular housing attribute, drag the desired variable to the \"Color\" button that is circled under the marks section.\n\nIn my example, when the mouse hovers over a point, it will give the condition of the house's siding.\n\nAt the top of the screen, go to Map -\\> Basemap -\\> Streets to add a streetmap.\n\n![](ogden_siding.png)\n\n### 4. Create a dashboard\n\nOnce you are satisfied with how your map looks, create a new dashboard at the bottom of the screen. Load in the sheet by dragging the sheet you want to use. In the dashboard, make edits to legend, title, and map scale.\n\n![Right-click on legend to find options to change legend colors, attribute names (edit alias), and more.](colors.png){fig-align=\"center\" width=\"544\"}\n\nYou may wish to continue to experiment with point size, borders and halos once you see how it looks in the dashboard.\n\nYou can add more than one sheet to a dashboard. My example uses one sheet, the Ogden siding sheet. In my dashboard, I right-clicked the null attribute and clicked \"exclude\". Now my map only shows houses with either chipped paint, poor siding or good siding.\n\n### 5. Download dashboard as image\n\nOnce you are satisfied, download the dashboard. I downloaded my dashboard as an image. From this map, I am able to see that the siding AI model determined that many of the houses in Ogden have poor siding.\n\n![](ogden_siding_dashboard.png){fig-align=\"center\"}\n\n## Embedding Dashboard into blog.\n\n\n\n```{=html}\n<div class='tableauPlaceholder' id='viz1688576064213' style='position: relative'><noscript><a href='#'><img alt='New Hampton Siding Quality ' src='https:&#47;&#47;public.tableau.com&#47;static&#47;images&#47;AI&#47;AIHousingVisualizations&#47;NH_Siding_No_Null&#47;1_rss.png' style='border: none' /></a></noscript><object class='tableauViz'  style='display:none;'><param name='host_url' value='https%3A%2F%2Fpublic.tableau.com%2F' /> <param name='embed_code_version' value='3' /> <param name='site_root' value='' /><param name='name' value='AIHousingVisualizations&#47;NH_Siding_No_Null' /><param name='tabs' value='no' /><param name='toolbar' value='yes' /><param name='static_image' value='https:&#47;&#47;public.tableau.com&#47;static&#47;images&#47;AI&#47;AIHousingVisualizations&#47;NH_Siding_No_Null&#47;1.png' /> <param name='animate_transition' value='yes' /><param name='display_static_image' value='yes' /><param name='display_spinner' value='yes' /><param name='display_overlay' value='yes' /><param name='display_count' value='yes' /><param name='language' value='en-US' /></object></div>                <script type='text/javascript'>                    var divElement = document.getElementById('viz1688576064213');                    var vizElement = divElement.getElementsByTagName('object')[0];                    vizElement.style.width='100%';vizElement.style.height=(divElement.offsetWidth*0.75)+'px';                    var scriptElement = document.createElement('script');                    scriptElement.src = 'https://public.tableau.com/javascripts/api/viz_v1.js';                    vizElement.parentNode.insertBefore(scriptElement, vizElement);                </script>\n\n\n</div>\n  \n  \n\n  \n  \n</head>\n<body>\nTrying to display a Tableau page.\n  <script>\n  var containerDiv = document.getElementById(\"vizContainer\"),\n\n          url = \"https://public.tableau.com/views/AIHousingVisualizations/NH_Siding_No_Null?:language=en-US&:display_count=n&:origin=viz_share_link\",\n\n          options = {\n            hideTabs: true,\n            hideToolbar: true,\n            onFirstInteractive: function() {\n              console.log(\"Run this code when the viz has finished loading.\");\n            }\n          };\n\n        viz = new tableau.Viz(containerDiv, url, options);\n        // Create a viz object and embed it in the container div.\n  </script>\n  \n</body>\n</html>\n```\n\n\n## Conclusion\n\nThis concludes the guide to mapping house quality. Hopefully this has given information that is helpful when preparing and visualizing spatial data. Again, if you're using Tableau Public, don't forget save work by publishing. My work has been lost a couple times because I forgot to publish.\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}